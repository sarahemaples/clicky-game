{"ast":null,"code":"var _jsxFileName = \"/Users/sarahmaples/Desktop/bootcamp/homework/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      score: 0,\n      highScore: 0,\n      modelsClicked: [0],\n      title: \"Click any fierce face to start\"\n    };\n\n    this.cardClicked = id => {\n      if (this.state.modelsClicked.indexOf(id) === -1) {\n        this.setState({\n          modelsClicked: this.state.modelsClicked.concat(id)\n        });\n      } else {\n        console.log(\"already clicked meh\");\n      }\n    };\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.title), React.createElement(Score, {\n      score: this.state.score,\n      highScore: this.state.highScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), this.state.friends.map(friend => React.createElement(FriendCard, {\n      cardClicked: this.cardClicked,\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sarahmaples/Desktop/bootcamp/homework/clicky-game/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Score","Title","friends","App","state","score","highScore","modelsClicked","title","cardClicked","id","indexOf","setState","concat","console","log","render","map","friend","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNF,MAAAA,OADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,aAAa,EAAE,CAAC,CAAD,CAJT;AAKNC,MAAAA,KAAK,EAAE;AALD,KAFkB;;AAAA,SAU1BC,WAV0B,GAUZC,EAAE,IAAI;AAClB,UAAI,KAAKN,KAAL,CAAWG,aAAX,CAAyBI,OAAzB,CAAiCD,EAAjC,MAAyC,CAAC,CAA9C,EAAgD;AAC9C,aAAKE,QAAL,CAAc;AAAEL,UAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,CAAyBM,MAAzB,CAAgCH,EAAhC;AAAjB,SAAd;AACD,OAFD,MAEO;AACLI,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,KAhByB;AAAA;;AAkB1B;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKZ,KAAL,CAAWI,KAAnB,CADF,EAEE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KADpB;AAEE,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKG,KAAKF,KAAL,CAAWF,OAAX,CAAmBe,GAAnB,CAAuBC,MAAM,IAC5B,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE,KAAKT,WADpB;AAEE,MAAA,EAAE,EAAES,MAAM,CAACR,EAFb;AAGE,MAAA,GAAG,EAAEQ,MAAM,CAACR,EAHd;AAIE,MAAA,IAAI,EAAEQ,MAAM,CAACC,IAJf;AAKE,MAAA,KAAK,EAAED,MAAM,CAACE,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALH,CADF;AAiBD;;AArCyB;;AAwC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highScore: 0,\n    modelsClicked: [0],\n    title: \"Click any fierce face to start\"\n  };\n  \n  cardClicked = id => {\n    if (this.state.modelsClicked.indexOf(id) === -1){\n      this.setState({ modelsClicked: this.state.modelsClicked.concat(id)});\n    } else {\n      console.log(\"already clicked meh\");\n    }\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.state.title}</Title>\n        <Score\n          score={this.state.score}\n          highScore={this.state.highScore} />\n        {this.state.friends.map(friend => (\n          <FriendCard\n            cardClicked={this.cardClicked}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}